<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
    targetNamespace="http://opennebula.org/XMLSchema" xmlns="http://opennebula.org/XMLSchema">

    <xs:complexType name="VM_SIMPLE">
        <xs:sequence>
            <xs:element name="ID" type="xs:integer"/>
            <xs:element name="UID" type="xs:integer"/>
            <xs:element name="NAME" type="xs:string"/>
            <xs:element name="LAST_POLL" type="xs:integer"/>
            <xs:element name="STATE" type="xs:integer"/>
            <xs:element name="LCM_STATE" type="xs:integer"/>
            <xs:element name="STIME" type="xs:integer"/>
            <xs:element name="ETIME" type="xs:integer"/>
            <xs:element name="DEPLOY_ID" type="xs:string"/>
            <xs:element name="MEMORY" type="xs:integer"/>
            <xs:element name="CPU" type="xs:integer"/>
            <xs:element name="NET_TX" type="xs:integer"/>
            <xs:element name="NET_RX" type="xs:integer"/>
            <xs:element name="LAST_SEQ" type="xs:integer"/>
            <xs:element name="TEMPLATE" type="TemplateType"/>
			<xs:element name="HISTORY" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="VM_COMPLEX">
        <xs:sequence>
            <xs:element name="ID" type="xs:integer"/>
            <xs:element name="UID" type="xs:integer"/>
            <xs:element name="USERNAME" type="xs:string"/>
            <xs:element name="NAME" type="xs:string"/>
            <xs:element name="LAST_POLL" type="xs:integer"/>
            <xs:element name="STATE" type="xs:integer"/>
            <xs:element name="LCM_STATE" type="xs:integer"/>
            <xs:element name="STIME" type="xs:integer"/>
            <xs:element name="ETIME" type="xs:integer"/>
            <xs:element name="DEPLOY_ID" type="xs:string"/>
            <xs:element name="MEMORY" type="xs:integer"/>
            <xs:element name="CPU" type="xs:integer"/>
            <xs:element name="NET_TX" type="xs:integer"/>
            <xs:element name="NET_RX" type="xs:integer"/>
            <xs:element name="LAST_SEQ" type="xs:integer"/>
            <xs:element name="TEMPLATE" type="TemplateType"/>
			<xs:element name="HISTORY" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>

	<!-- Saint - Tue May 17 19:37:04 2011           -->
	<!--                                            -->
	<!-- Saint added this to handle the oca replies -->

	<xs:complexType name="TemplateType">
	  <xs:sequence>
		<!-- this will be discarded -->
		<xs:element name="CONTEXT" type="xs:anyType"/>
		<!-- it returns a CDATA instead of a number. Could be or
		     could not be an integer, we will model with something appropriate

             about the all and minOccurs="0", this is a difensive approach.
			 Maybe some harder decision may occur after a reply from the
			 OpenNebula fellows
		-->
		<xs:element name="CPU" type="xs:integer" minOccurs="0"/>
		<xs:element name="DISK" type="DiskType" maxOccurs="unbounded"  minOccurs="0"/>
		<xs:element name="MEMORY" type="xs:string" minOccurs="0"/>
		<xs:element name="NAME" type="xs:string" minOccurs="0"/>
		<xs:element name="NIC" type="NicType" maxOccurs="unbounded"  minOccurs="0"/>
		<xs:element name="OS" type="OsType"  minOccurs="0"/>
		<xs:element name="VCPU" type="xs:string" minOccurs="0"/>
		<xs:element name="VMID" type="xs:string" minOccurs="0"/>
	  </xs:sequence>
	</xs:complexType>

	<xs:complexType name="DiskType" >
	  <xs:sequence>
		<xs:element name="READONLY" type="xs:string" minOccurs="0" />
		<xs:element name="SIZE" type="xs:string" minOccurs="0" />
		<xs:element name="SOURCE" type="xs:string" minOccurs="0" />
		<xs:element name="TARGET" type="xs:string" minOccurs="0" />
		<xs:element name="TYPE" type="xs:string" minOccurs="0" />
	  </xs:sequence>
	</xs:complexType>

	<xs:complexType name="NicType" >
	  <xs:sequence>
		<xs:element name="BRIDGE" type="xs:string" minOccurs="0" />
		<xs:element name="IP" type="xs:string" minOccurs="0" />
		<xs:element name="MAC" type="xs:string" minOccurs="0" />
		<xs:element name="NETWORK" type="xs:string" minOccurs="0" />
		<xs:element name="NETWORK_ID" type="xs:string" minOccurs="0" />
	  </xs:sequence>
	</xs:complexType>

	<xs:complexType name="OsType" >
	  <xs:sequence>
		<xs:element name="ARCH" type="xs:string" minOccurs="0" />
		<xs:element name="BOOT" type="xs:string" minOccurs="0" />
		<xs:element name="BOOTLOADER" type="xs:string" minOccurs="0" />
		<xs:element name="INITRD" type="xs:string" minOccurs="0" />
		<xs:element name="KERNEL" type="xs:string" minOccurs="0" />
		<xs:element name="KERNEL_CMD" type="xs:string" minOccurs="0" />
		<xs:element name="ROOT" type="xs:string" minOccurs="0" />
	  </xs:sequence>
	</xs:complexType>

	<!-- /Saint -->
</xs:schema>
